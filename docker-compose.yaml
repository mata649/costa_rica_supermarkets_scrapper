version: '3.8'

x-common:
  &common
  image: apache/airflow:2.3.0
  user: "${AIRFLOW_UID}:0"
  env_file: 
    - .env
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - /var/run/docker.sock:/var/run/docker.sock


x-depends-on:
  &depends-on
  depends_on:
    postgres_airflow:
      condition: service_healthy
    airflow-init:
      condition: service_completed_successfully
services:
    
    postgres:
        image: postgres:14.4-alpine
        container_name: postgres
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: costa_rica_supermarkets
        healthcheck:
          test: ["CMD", "pg_isready", "-U", "postgres"]
          interval: 5s
          retries: 5
        ports:
          - '5432:5432'
        volumes: 
          - ./postgres_data/supermarket_db:/var/lib/postgresql/data
       
    #Creates the tables
    supermarket_etl:
      container_name: supermarket_etl
      image: supermarket_etl
      build:
        dockerfile: Dockerfile
        context: .
      depends_on:
      - postgres
      entrypoint: /bin/bash
      command:
        - -c
        - |
          alembic revision --autogenerate -m "Creating tables"    
          alembic upgrade heads
          
    pgadmin:
        container_name: pgadmin4
        image: dpage/pgadmin4
        restart: always
        environment:
          PGADMIN_DEFAULT_EMAIL: admin@admin.com
          PGADMIN_DEFAULT_PASSWORD: root
        ports:
          - "5050:80"
    

    postgres_airflow:
      image: postgres:14.4-alpine
      container_name: postgres_airflow
      ports:
        - "5434:5432"
      healthcheck:
        test: ["CMD", "pg_isready", "-U", "airflow"]
        interval: 5s
        retries: 5
      env_file:
        - .env
      volumes:
      - ./postgres_data/airflow_db:/var/lib/postgresql/data
    scheduler:
      <<: *common
      <<: *depends-on
      container_name: airflow-scheduler
      command: scheduler
      restart: on-failure
      ports:
        - "8793:8793"

    webserver:
      <<: *common
      <<: *depends-on
      container_name: airflow-webserver
      restart: always
      command: webserver
      ports:
        - "8081:8080"
      healthcheck:
        test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
        interval: 30s
        timeout: 30s
        retries: 5

    airflow-init:
      <<: *common
      container_name: airflow-init
      entrypoint: /bin/bash
      command:
        - -c
        - |
          mkdir -p /sources/logs /sources/dags /sources/plugins
          chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags,plugins}
          exec /entrypoint airflow version
